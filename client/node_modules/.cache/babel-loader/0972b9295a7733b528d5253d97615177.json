{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Suhat\\\\OneDrive\\\\Documents\\\\GitHub\\\\teletale\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\Suhat\\\\OneDrive\\\\Documents\\\\GitHub\\\\teletale\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Suhat\\\\OneDrive\\\\Documents\\\\GitHub\\\\teletale\\\\client\\\\src\\\\components\\\\auth\\\\Register.js\";\nimport React, { Fragment, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alert';\nimport PropTypes from 'prop-types';\n\nconst Register = ({\n  setAlert\n}) => {\n  const _useState = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  console.log(formData);\n  const name = formData.name,\n        email = formData.email,\n        password = formData.password,\n        password2 = formData.password2;\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert('password do not match', 'danger');\n    } else {\n      console.log('your account was created !!');\n      const newUser = {\n        name,\n        email,\n        password\n      };\n      console.log(newUser);\n\n      try {\n        const config = {\n          header: {\n            'Content-Type': 'application/json'\n          }\n        };\n        const body = JSON.stringify(newUser);\n        const res = await axios.post('/api/users', body, config);\n        console.log(res.data);\n      } catch (err) {\n        console.log(err.response.data);\n      }\n    }\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \" Sign Up \"), \" \", React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), \" Create Your Account \"), \" \", React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), \" \"), \" \", React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email Address\",\n    name: \"email\",\n    value: email,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), \" \", React.createElement(\"small\", {\n    className: \"form-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"This site uses Gravatar so if you want a profile image, use a Gravatar email \"), \" \"), \" \", React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: password,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), \" \"), \" \", React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"password2\",\n    value: password2,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), \" \"), \" \", React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })), \" \", React.createElement(\"p\", {\n    className: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Already have an account ? \", React.createElement(Link, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \" Sign In \"), \" \"), \" \");\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  setAlert\n})(Register);","map":{"version":3,"sources":["C:\\Users\\Suhat\\OneDrive\\Documents\\GitHub\\teletale\\client\\src\\components\\auth\\Register.js"],"names":["React","Fragment","useState","axios","Link","connect","setAlert","PropTypes","Register","name","email","password","password2","formData","setFormData","console","log","onChange","e","target","value","onSubmit","preventDefault","newUser","config","header","body","JSON","stringify","res","post","data","err","response","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, {\n  Fragment,\n  useState\n} from 'react';\nimport axios from 'axios';\nimport {\n  Link\n} from 'react-router-dom';\nimport {\n  connect\n} from 'react-redux';\nimport {\n  setAlert\n} from '../../actions/alert';\nimport PropTypes from 'prop-types';\n\nconst Register = ({\n  setAlert\n}) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  console.log(formData)\n\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = formData;\n\n  const onChange = e =>\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('password do not match', 'danger');\n    } else {\n      console.log('your account was created !!');\n\n      const newUser = {\n        name,\n        email,\n        password\n      };\n      console.log(newUser);\n      try {\n        const config = {\n          header: {\n            'Content-Type': 'application/json'\n          }\n        };\n        const body = JSON.stringify(newUser);\n        const res = await axios.post('/api/users', body, config);\n\n        console.log(res.data);\n      } catch (err) {\n        console.log(err.response.data);\n      }\n    }\n  };\n\n  return ( <\n    Fragment >\n    <\n    h1 className = 'large text-primary' > Sign Up < /h1> <\n    p className = 'lead' >\n    <\n    i className = 'fas fa-user' / > Create Your Account <\n    /p> <\n    form className = 'form'\n    onSubmit = {\n      e => onSubmit(e)\n    } >\n    <\n    div className = 'form-group' >\n    <\n    input type = 'text'\n    placeholder = 'Name'\n    name = 'name'\n    value = {\n      name\n    }\n    onChange = {\n      e => onChange(e)\n    }\n    /> <\n    /div> <\n    div className = 'form-group' >\n    <\n    input type = 'email'\n    placeholder = 'Email Address'\n    name = 'email'\n    value = {\n      email\n    }\n    onChange = {\n      e => onChange(e)\n    }\n    /> <\n    small className = 'form-text' >\n    This site uses Gravatar so\n    if you want a profile image, use a Gravatar email <\n    /small> <\n    /div> <\n    div className = 'form-group' >\n    <\n    input type = 'password'\n    placeholder = 'Password'\n    name = 'password'\n    value = {\n      password\n    }\n    onChange = {\n      e => onChange(e)\n    }\n    /> <\n    /div> <\n    div className = 'form-group' >\n    <\n    input type = 'password'\n    placeholder = 'Confirm Password'\n    name = 'password2'\n    value = {\n      password2\n    }\n    onChange = {\n      e => onChange(e)\n    }\n    /> <\n    /div> <\n    input type = 'submit'\n    className = 'btn btn-primary'\n    value = 'Register' / >\n    <\n    /form> <\n    p className = 'my-1' >\n    Already have an account ? < Link to = '/login' > Sign In < /Link> <\n    /p> <\n    /Fragment>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null, {\n    setAlert\n  }\n)(Register);"]},"metadata":{},"sourceType":"module"}