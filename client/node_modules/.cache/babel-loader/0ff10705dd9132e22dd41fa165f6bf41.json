{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Suhat\\\\OneDrive\\\\Documents\\\\GitHub\\\\teletale\\\\client\\\\src\\\\components\\\\posts\\\\Posts.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getPosts } from '../../actions/post';\nimport PostItem from './PostItem';\n\nconst Posts = ({\n  getPosts,\n  post: {\n    posts,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n  return loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \" Stories \"), \" \", React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), \" Welcome to TeleTale \"), \" \", React.createElement(PostForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \" \", posts.map(post => React.createElement(PostItem, {\n    key: post._id,\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), \" \"), \" \");\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(Posts);","map":{"version":3,"sources":["C:\\Users\\Suhat\\OneDrive\\Documents\\GitHub\\teletale\\client\\src\\components\\posts\\Posts.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getPosts","PostItem","Posts","post","posts","loading","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,SAFF,QAGO,OAHP;AAIA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,OADF,QAEO,aAFP;AAGA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SACEC,QADF,QAEO,oBAFP;AAGA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AACbF,EAAAA,QADa;AAEbG,EAAAA,IAAI,EAAE;AACJC,IAAAA,KADI;AAEJC,IAAAA;AAFI;AAFO,CAAD,KAMR;AACJT,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,QAAQ;AACT,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,SAAOK,OAAO,GAAK,oBACjB,OADiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,GAER,oBACJ,QADI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEJ;AACG,IAAA,SAAS,EAAG,oBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFI,OAGiD;AACnD,IAAA,SAAS,EAAG,MADuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAErD;AACE,IAAA,SAAS,EAAG,aADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFqD,0BAHjD,OAOA,oBACJ,QADI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPA,EASJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEED,KAAK,CAACE,GAAN,CAAUH,IAAI,IAAM,oBAClB,QADkB;AACT,IAAA,GAAG,EACVA,IAAI,CAACI,GAFW;AAIlB,IAAA,IAAI,EACFJ,IALgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,CAFF,MATI,MAFN;AA0BD,CArCD;;AAuCAD,KAAK,CAACM,SAAN,GAAkB;AAChBR,EAAAA,QAAQ,EAAEH,SAAS,CAACY,IAAV,CAAeC,UADT;AAEhBP,EAAAA,IAAI,EAAEN,SAAS,CAACc,MAAV,CAAiBD;AAFP,CAAlB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,IAAI,EAAEU,KAAK,CAACV;AADoB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CACpBc,eADoB,EACH;AACfZ,EAAAA;AADe,CADG,CAAP,CAIbE,KAJa,CAAf","sourcesContent":["import React, {\n  Fragment,\n  useEffect\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  connect\n} from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport {\n  getPosts\n} from '../../actions/post';\nimport PostItem from './PostItem';\n\nconst Posts = ({\n  getPosts,\n  post: {\n    posts,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return loading ? ( <\n    Spinner / >\n  ) : ( <\n    Fragment >\n    <\n    h1 className = 'large text-primary' > Stories < /h1> <\n    p className = 'lead' >\n    <\n    i className = 'fas fa-user' / > Welcome to TeleTale <\n    /p> <\n    PostForm / >\n    <\n    div > {\n      posts.map(post => ( <\n        PostItem key = {\n          post._id\n        }\n        post = {\n          post\n        }\n        />\n      ))\n    } <\n    /div> <\n    /Fragment>\n  );\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(\n  mapStateToProps, {\n    getPosts\n  }\n)(Posts);"]},"metadata":{},"sourceType":"module"}