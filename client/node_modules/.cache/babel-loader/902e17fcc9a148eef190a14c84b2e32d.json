{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Suhat\\\\OneDrive\\\\Documents\\\\GitHub\\\\teletale\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_POSTS, POST_ERROR, GET_POST, ADD_POST, DELETE_POST, UPDATE_LIKES } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case GET_POSTS:\n      return _objectSpread({}, state, {\n        posts: payload,\n        loading: false\n      });\n\n    case GET_POST:\n      return _objectSpread({}, state, {\n        post: payload,\n        loading: false\n      });\n\n    case ADD_POST:\n      return _objectSpread({}, state, {\n        posts: [payload, ...state.posts],\n        loading: false\n      });\n\n    case POST_ERROR:\n      return _objectSpread({}, state, {\n        error: payload,\n        loading: false\n      });\n\n    case DELETE_POST:\n      return _objectSpread({}, state, {\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      });\n\n    case UPDATE_LIKES:\n      return _objectSpread({}, state, {\n        posts: state.posts.map(post => post._id === payload.id ? _objectSpread({}, post, {\n          likes: payload.likes\n        }) : post),\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Suhat\\OneDrive\\Documents\\GitHub\\teletale\\client\\src\\reducers\\post.js"],"names":["GET_POSTS","POST_ERROR","GET_POST","ADD_POST","DELETE_POST","UPDATE_LIKES","initialState","posts","post","loading","error","state","action","type","payload","filter","_id","map","id","likes"],"mappings":";AAAA,SACEA,SADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,QAJF,EAKEC,WALF,EAMEC,YANF,QAOO,kBAPP;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGL,YAAlB,EAAgCM,MAAhC,EAAwC;AAAA,QAEnDC,IAFmD,GAIjDD,MAJiD,CAEnDC,IAFmD;AAAA,QAGnDC,OAHmD,GAIjDF,MAJiD,CAGnDE,OAHmD;;AAMrD,UAAQD,IAAR;AACE,SAAKb,SAAL;AACE,+BACKW,KADL;AAEEJ,QAAAA,KAAK,EAAEO,OAFT;AAGIL,QAAAA,OAAO,EAAE;AAHb;;AAKF,SAAKP,QAAL;AACE,+BACKS,KADL;AAEEH,QAAAA,IAAI,EAAEM,OAFR;AAGIL,QAAAA,OAAO,EAAE;AAHb;;AAKF,SAAKN,QAAL;AACE,+BACKQ,KADL;AAEEJ,QAAAA,KAAK,EAAE,CAACO,OAAD,EAAU,GAAGH,KAAK,CAACJ,KAAnB,CAFT;AAGIE,QAAAA,OAAO,EAAE;AAHb;;AAKF,SAAKR,UAAL;AACE,+BACKU,KADL;AAEED,QAAAA,KAAK,EAAEI,OAFT;AAGIL,QAAAA,OAAO,EAAE;AAHb;;AAKF,SAAKL,WAAL;AACE,+BACKO,KADL;AAEEJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAmBP,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaF,OAAxC,CAFT;AAGIL,QAAAA,OAAO,EAAE;AAHb;;AAKF,SAAKJ,YAAL;AACE,+BACKM,KADL;AAEEJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYU,GAAZ,CAAgBT,IAAI,IACvBA,IAAI,CAACQ,GAAL,KAAaF,OAAO,CAACI,EAArB,qBAEKV,IAFL;AAGEW,UAAAA,KAAK,EAAEL,OAAO,CAACK;AAHjB,aAKAX,IANG,CAFT;AAUIC,QAAAA,OAAO,EAAE;AAVb;;AAYF;AACE,aAAOE,KAAP;AA7CJ;AA+CD","sourcesContent":["import {\n  GET_POSTS,\n  POST_ERROR,\n  GET_POST,\n  ADD_POST,\n  DELETE_POST,\n  UPDATE_LIKES\n} from '../actions/types';\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\n\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n          loading: false\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n          loading: false\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n          loading: false\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n          loading: false\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n          loading: false\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map(post =>\n            post._id === payload.id ?\n            {\n              ...post,\n              likes: payload.likes\n            } :\n            post\n          ),\n          loading: false\n      };\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}