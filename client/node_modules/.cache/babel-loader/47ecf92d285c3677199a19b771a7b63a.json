{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Suhat\\\\OneDrive\\\\Documents\\\\GitHub\\\\teletale\\\\client\\\\src\\\\components\\\\profiles\\\\Profiles.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfiles } from '../../actions/profile';\nimport ProfileItem from './ProfileItem';\n\nconst Profiles = ({\n  getProfiles,\n  profile: {\n    profiles,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getProfiles();\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \" \", loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \" Developers \"), \" \", React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fab fa-connectdevelop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), \" Browse and connect with developers \"), \" \", React.createElement(\"div\", {\n    className: \"profiles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \" \", profiles.length > 0 ? profiles.map(profile => React.createElement(ProfileItem, {\n    key: profile._id,\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \" No profiles found... \"), \" \"), \" \"), \" \");\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);","map":{"version":3,"sources":["C:\\Users\\Suhat\\OneDrive\\Documents\\GitHub\\teletale\\client\\src\\components\\profiles\\Profiles.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfiles","ProfileItem","Profiles","profile","profiles","loading","length","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,SAFF,QAGO,OAHP;AAIA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,OADF,QAEO,aAFP;AAGA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SACEC,WADF,QAEO,uBAFP;AAGA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBF,EAAAA,WADgB;AAEhBG,EAAAA,OAAO,EAAE;AACPC,IAAAA,QADO;AAEPC,IAAAA;AAFO;AAFO,CAAD,KAMX;AACJT,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAS,oBACP,QADO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAELK,OAAO,GAAK,oBACV,OADU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,GAED,oBACJ,QADI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEJ;AACG,IAAA,SAAS,EAAG,oBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFI,OAGoD;AACtD,IAAA,SAAS,EAAG,MAD0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAExD;AACE,IAAA,SAAS,EAAG,uBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFwD,yCAHpD,OAOA;AACA,IAAA,SAAS,EAAG,UADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEFD,QAAQ,CAACE,MAAT,GAAkB,CAAlB,GACEF,QAAQ,CAACG,GAAT,CAAaJ,OAAO,IAAM,oBACxB,WADwB;AACZ,IAAA,GAAG,EACbA,OAAO,CAACK,GAFc;AAIxB,IAAA,OAAO,EACLL,OALsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1B,CADF,GAUM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAZJ,MAPA,MAJD,MAAT;AAiCD,CA5CD;;AA8CAD,QAAQ,CAACO,SAAT,GAAqB;AACnBT,EAAAA,WAAW,EAAEH,SAAS,CAACa,IAAV,CAAeC,UADT;AAEnBR,EAAAA,OAAO,EAAEN,SAAS,CAACe,MAAV,CAAiBD;AAFP,CAArB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,OAAO,EAAEW,KAAK,CAACX;AADiB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CACpBe,eADoB,EACH;AACfb,EAAAA;AADe,CADG,CAAP,CAIbE,QAJa,CAAf","sourcesContent":["import React, {\n  Fragment,\n  useEffect\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  connect\n} from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport {\n  getProfiles\n} from '../../actions/profile';\nimport ProfileItem from './ProfileItem';\n\nconst Profiles = ({\n  getProfiles,\n  profile: {\n    profiles,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getProfiles();\n  }, []);\n\n  return ( <\n    Fragment > {\n      loading ? ( <\n        Spinner / >\n      ) : ( <\n        Fragment >\n        <\n        h1 className = 'large text-primary' > Developers < /h1> <\n        p className = 'lead' >\n        <\n        i className = 'fab fa-connectdevelop' / > Browse and connect with developers <\n        /p> <\n        div className = 'profiles' > {\n          profiles.length > 0 ? (\n            profiles.map(profile => ( <\n              ProfileItem key = {\n                profile._id\n              }\n              profile = {\n                profile\n              }\n              />\n            ))\n          ) : ( <\n            h4 > No profiles found... < /h4>\n          )\n        } <\n        /div> <\n        /Fragment>\n      )\n    } <\n    /Fragment>\n  );\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(\n  mapStateToProps, {\n    getProfiles\n  }\n)(Profiles);"]},"metadata":{},"sourceType":"module"}