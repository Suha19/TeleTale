{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Suhat\\\\OneDrive\\\\Documents\\\\GitHub\\\\teletale\\\\client\\\\src\\\\components\\\\post\\\\Post.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from '../post/CommentForm';\nimport CommentItem from '../post/CommentItem';\nimport { getPost } from '../../actions/post';\n\nconst Post = ({\n  getPost,\n  post: {\n    post,\n    loading\n  },\n  match\n}) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n  return loading || post === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/posts\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Back To Posts \"), \" \", React.createElement(PostItem, {\n    post: post,\n    showActions: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), \" \", React.createElement(CommentForm, {\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), \" \", React.createElement(\"div\", {\n    className: \"comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \" \", post.comments.map(comment => React.createElement(CommentItem, {\n    key: comment._id,\n    comment: comment,\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), \" \"), \" \");\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);","map":{"version":3,"sources":["C:\\Users\\Suhat\\OneDrive\\Documents\\GitHub\\teletale\\client\\src\\components\\post\\Post.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","Spinner","PostItem","CommentForm","CommentItem","getPost","Post","post","loading","match","params","id","_id","comments","map","comment","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IACIC,QADJ,EAEIC,SAFJ,QAGO,OAHP;AAIA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACIC,IADJ,QAEO,kBAFP;AAGA,SACIC,OADJ,QAEO,aAFP;AAGA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SACIC,OADJ,QAEO,oBAFP;;AAIA,MAAMC,IAAI,GAAG,CAAC;AACVD,EAAAA,OADU;AAEVE,EAAAA,IAAI,EAAE;AACFA,IAAAA,IADE;AAEFC,IAAAA;AAFE,GAFI;AAMVC,EAAAA;AANU,CAAD,KAOP;AACFZ,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAP;AACH,GAFQ,EAEN,CAACN,OAAD,CAFM,CAAT;AAIA,SAAOG,OAAO,IAAID,IAAI,KAAK,IAApB,GAA6B,oBAChC,OADgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7B,GAED,oBACF,QADE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEF,oBACA,IADA;AACK,IAAA,EAAE,EAAG,QADV;AAEA,IAAA,SAAS,EAAG,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFE,OAMK,oBACP,QADO;AACE,IAAA,IAAI,EACTA,IAFG;AAIP,IAAA,WAAW,EACP,KALG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANL,OAaC,oBACH,WADG;AACS,IAAA,MAAM,EACdA,IAAI,CAACK,GAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbD,OAiBC;AACC,IAAA,SAAS,EAAG,UADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAECL,IAAI,CAACM,QAAL,CAAcC,GAAd,CAAkBC,OAAO,IAAM,oBAC3B,WAD2B;AACf,IAAA,GAAG,EACXA,OAAO,CAACH,GAFe;AAI3B,IAAA,OAAO,EACHG,OALuB;AAO3B,IAAA,MAAM,EACFR,IAAI,CAACK,GARkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/B,CAFD,MAjBD,MAFN;AAqCH,CAjDD;;AAmDAN,IAAI,CAACU,SAAL,GAAiB;AACbX,EAAAA,OAAO,EAAEP,SAAS,CAACmB,IAAV,CAAeC,UADX;AAEbX,EAAAA,IAAI,EAAET,SAAS,CAACqB,MAAV,CAAiBD;AAFV,CAAjB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9Bd,EAAAA,IAAI,EAAEc,KAAK,CAACd;AADkB,CAAL,CAA7B;;AAIA,eAAeP,OAAO,CAClBoB,eADkB,EACD;AACbf,EAAAA;AADa,CADC,CAAP,CAIbC,IAJa,CAAf","sourcesContent":["import React, {\n    Fragment,\n    useEffect\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Link\n} from 'react-router-dom';\nimport {\n    connect\n} from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from '../post/CommentForm';\nimport CommentItem from '../post/CommentItem';\nimport {\n    getPost\n} from '../../actions/post';\n\nconst Post = ({\n    getPost,\n    post: {\n        post,\n        loading\n    },\n    match\n}) => {\n    useEffect(() => {\n        getPost(match.params.id);\n    }, [getPost]);\n\n    return loading || post === null ? ( <\n        Spinner / >\n    ) : ( <\n        Fragment >\n        <\n        Link to = '/posts'\n        className = 'btn' >\n        Back To Posts <\n        /Link> <\n        PostItem post = {\n            post\n        }\n        showActions = {\n            false\n        }\n        /> <\n        CommentForm postId = {\n            post._id\n        }\n        /> <\n        div className = 'comments' > {\n            post.comments.map(comment => ( <\n                CommentItem key = {\n                    comment._id\n                }\n                comment = {\n                    comment\n                }\n                postId = {\n                    post._id\n                }\n                />\n            ))\n        } <\n        /div> <\n        /Fragment>\n    );\n};\n\nPost.propTypes = {\n    getPost: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    post: state.post\n});\n\nexport default connect(\n    mapStateToProps, {\n        getPost\n    }\n)(Post);"]},"metadata":{},"sourceType":"module"}