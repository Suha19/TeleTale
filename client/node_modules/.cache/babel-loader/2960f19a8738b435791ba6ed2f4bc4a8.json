{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Suhat\\\\OneDrive\\\\Documents\\\\GitHub\\\\teletale\\\\client\\\\src\\\\components\\\\posts\\\\PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'; // import Moment from 'react-moment';\n\nimport { connect } from 'react-redux';\n\nconst PostItem = ({\n  auth,\n  post: {\n    _id,\n    story,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  }\n}) => React.createElement(\"div\", {\n  className: \"post bg-white p-1 my-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: \"/profile/\".concat(user),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  className: \"round-img\",\n  src: avatar,\n  alt: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}), React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, \" \", name, \" \"), \" \"), \" \"), \" \", React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  className: \"my-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, \" \", story, \" \"), \" \", React.createElement(\"p\", {\n  className: \"post-date\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}, \" \", \" \"), \" \", React.createElement(\"button\", {\n  type: \"button\",\n  class: \"btn btn-light\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  class: \"fas fa-thumbs-up\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}), \" \", ' ', \" \", React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}, \" \", likes.length > 0 && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}, \" \", likes.length, \" \"))), \" \", React.createElement(\"button\", {\n  type: \"button\",\n  class: \"btn btn-light\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  class: \"fas fa-thumbs-down\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n})), \" \", React.createElement(Link, {\n  to: \"/posts/\".concat(_id),\n  className: \"btn btn-primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}, \"Add Paragraph \", ' ', \" \", comments.length > 0 && React.createElement(\"span\", {\n  className: \"comment-count\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78\n  },\n  __self: this\n}, \" \", comments.length, \" \"), \" \"), \" \", !auth.loading && user === auth.user._id && React.createElement(\"button\", {\n  type: \"button\",\n  class: \"btn btn-danger\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  class: \"fas fa-times\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88\n  },\n  __self: this\n})), \" \"), \" \");\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {})(PostItem);","map":{"version":3,"sources":["C:\\Users\\Suhat\\OneDrive\\Documents\\GitHub\\teletale\\client\\src\\components\\posts\\PostItem.js"],"names":["React","Fragment","PropTypes","Link","connect","PostItem","auth","post","_id","story","name","avatar","user","likes","comments","date","length","loading","propTypes","object","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {\n  Fragment\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Link\n} from 'react-router-dom';\n// import Moment from 'react-moment';\nimport {\n  connect\n} from 'react-redux';\n\nconst PostItem = ({\n    auth,\n    post: {\n      _id,\n      story,\n      name,\n      avatar,\n      user,\n      likes,\n      comments,\n      date\n    }\n  }) => ( <\n    div className = 'post bg-white p-1 my-1' >\n    <\n    div >\n    <\n    Link to = {\n      `/profile/${user}`\n    } >\n    <\n    img className = 'round-img'\n    src = {\n      avatar\n    }\n    alt = '' / >\n    <\n    h4 > {\n      name\n    } < /h4> <\n    /Link> <\n    /div> <\n    div >\n    <\n    p className = 'my-1' > {\n      story\n    } < /p> <\n    p className = 'post-date' > {\n      /* Posted on <Moment format='YYYY/MM/DD'>{date}</Moment> */ } <\n    /p> <\n    button type = 'button'\n    class = 'btn btn-light' >\n    <\n    i class = 'fas fa-thumbs-up' / > {\n      ' '\n    } <\n    span > {\n      likes.length > 0 && < span > {\n        likes.length\n      } < /span>}</span >\n      <\n      /button> <\n      button type = 'button'\n      class = 'btn btn-light' >\n      <\n      i class = 'fas fa-thumbs-down' / >\n      <\n      /button> <\n      Link to = {\n        `/posts/${_id}`\n      }\n      className = 'btn btn-primary' >\n      Add Paragraph {\n        ' '\n      } {\n        comments.length > 0 && ( <\n          span className = 'comment-count' > {\n            comments.length\n          } < /span>\n        )\n      } <\n      /Link> {\n        !auth.loading && user === auth.user._id && ( <\n          button type = 'button'\n          class = 'btn btn-danger' >\n          <\n          i class = 'fas fa-times' / >\n          <\n          /button>\n        )\n      } <\n      /div> <\n      /div>\n    );\n\n    PostItem.propTypes = {\n      post: PropTypes.object.isRequired,\n      auth: PropTypes.object.isRequired\n    };\n\n    const mapStateToProps = state => ({\n      auth: state.auth\n    });\n\n    export default connect(\n      mapStateToProps, {}\n    )(PostItem);"]},"metadata":{},"sourceType":"module"}