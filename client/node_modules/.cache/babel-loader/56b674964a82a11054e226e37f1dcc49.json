{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_POSTS, POST_ERROR, DELETE_POST, ADD_POST, GET_POST } from './types'; // Get posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete post\n\nexport const deletePost = id => async dispatch => {\n  try {\n    await axios.delete(\"/api/posts/\".concat(id));\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add post\n\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post('/api/posts', formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get post\n\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/posts/\".concat(id));\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:\\Users\\Suhat\\OneDrive\\Documents\\GitHub\\teletale\\client\\src\\actions\\post.js"],"names":["axios","setAlert","GET_POSTS","POST_ERROR","DELETE_POST","ADD_POST","GET_POST","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","deletePost","id","delete","addPost","formData","config","headers","post","getPost"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n    setAlert\n} from './alert';\nimport {\n    GET_POSTS,\n    POST_ERROR,\n    DELETE_POST,\n    ADD_POST,\n    GET_POST,\n} from './types';\n\n// Get posts\nexport const getPosts = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/posts');\n\n        dispatch({\n            type: GET_POSTS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        });\n    }\n};\n\n// Delete post\nexport const deletePost = id => async dispatch => {\n    try {\n        await axios.delete(`/api/posts/${id}`);\n\n        dispatch({\n            type: DELETE_POST,\n            payload: id\n        });\n\n        dispatch(setAlert('Post Removed', 'success'));\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        });\n    }\n};\n\n// Add post\nexport const addPost = formData => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    try {\n        const res = await axios.post('/api/posts', formData, config);\n\n        dispatch({\n            type: ADD_POST,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Post Created', 'success'));\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        });\n    }\n};\n\n// Get post\nexport const getPost = id => async dispatch => {\n    try {\n        const res = await axios.get(`/api/posts/${id}`);\n\n        dispatch({\n            type: GET_POST,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        });\n    }\n};"]},"metadata":{},"sourceType":"module"}