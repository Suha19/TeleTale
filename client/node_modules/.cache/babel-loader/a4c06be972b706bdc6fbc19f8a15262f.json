{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Suhat\\\\OneDrive\\\\Documents\\\\GitHub\\\\teletale\\\\client\\\\src\\\\components\\\\posts\\\\PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n  auth,\n  addLike,\n  removeLike,\n  deletePost,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  }\n}) => React.createElement(Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"post bg-white p-1 my-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: \"/profile/\".concat(user),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  className: \"round-img\",\n  src: avatar,\n  alt: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}), React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}, \" \", name, \" \"), \" \"), \" \"), \" \", React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  className: \"my-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, \" \", text, \" \"), \" \", React.createElement(\"p\", {\n  className: \"post-date\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}, \"Posted on \", React.createElement(Moment, {\n  format: \"YYYY/MM/DD\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}, \" \", date, \" \"), \" \"), \" \", React.createElement(\"button\", {\n  onClick: () => addLike(_id),\n  type: \"button\",\n  className: \"btn btn-light\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-thumbs-up\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}), \" \", ' ', \" \", React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}, \" \", likes.length > 0 && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76\n  },\n  __self: this\n}, \" \", likes.length, \" \"))), \" \", React.createElement(\"button\", {\n  onClick: () => removeLike(_id),\n  type: \"button\",\n  className: \"btn btn-light\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-thumbs-down\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87\n  },\n  __self: this\n})), \" \", React.createElement(Link, {\n  to: \"/posts/\".concat(_id),\n  className: \"btn btn-primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n}, \"Add Paragraph \", ' ', \" \", comments.length > 0 && React.createElement(\"span\", {\n  className: \"comment-count\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n}, \" \", comments.length, \" \"), \" \"), \" \", !auth.loading && user === auth.user._id && React.createElement(\"button\", {\n  onClick: () => deletePost(_id),\n  type: \"button\",\n  className: \"btn btn-danger\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-times\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111\n  },\n  __self: this\n})), \" \"), \" \"), \" \");\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["C:\\Users\\Suhat\\OneDrive\\Documents\\GitHub\\teletale\\client\\src\\components\\posts\\PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","addLike","removeLike","deletePost","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","length","loading","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {\n  Fragment\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Link\n} from 'react-router-dom';\nimport Moment from 'react-moment';\nimport {\n  connect\n} from 'react-redux';\nimport {\n  addLike,\n  removeLike,\n  deletePost\n} from '../../actions/post';\n\nconst PostItem = ({\n    auth,\n    addLike,\n    removeLike,\n    deletePost,\n\n    post: {\n      _id,\n      text,\n      name,\n      avatar,\n      user,\n      likes,\n      comments,\n      date\n    }\n  }) => ( <\n    Fragment >\n    <\n    div className = 'post bg-white p-1 my-1' >\n    <\n    div >\n    <\n    Link to = {\n      `/profile/${user}`\n    } >\n    <\n    img className = 'round-img'\n    src = {\n      avatar\n    }\n    alt = '' / >\n    <\n    h4 > {\n      name\n    } < /h4> <\n    /Link> <\n    /div> <\n    div >\n    <\n    p className = 'my-1' > {\n      text\n    } < /p> <\n    p className = 'post-date' >\n    Posted on < Moment format = 'YYYY/MM/DD' > {\n      date\n    } < /Moment> <\n    /p> <\n    button onClick = {\n      () => addLike(_id)\n    }\n    type = 'button'\n    className = 'btn btn-light' >\n    <\n    i className = 'fas fa-thumbs-up' / > {\n      ' '\n    } <\n    span > {\n      likes.length > 0 && < span > {\n        likes.length\n      } < /span>}</span >\n      <\n      /button> <\n      button\n      onClick = {\n        () => removeLike(_id)\n      }\n      type = 'button'\n      className = 'btn btn-light' >\n      <\n      i className = 'fas fa-thumbs-down' / >\n      <\n      /button> <\n      Link to = {\n        `/posts/${_id}`\n      }\n      className = 'btn btn-primary' >\n      Add Paragraph {\n        ' '\n      } {\n        comments.length > 0 && ( <\n          span className = 'comment-count' > {\n            comments.length\n          } < /span>\n        )\n      } <\n      /Link> {\n        !auth.loading && user === auth.user._id && ( <\n          button onClick = {\n            () => deletePost(_id)\n          }\n          type = 'button'\n          className = 'btn btn-danger' >\n          <\n          i className = 'fas fa-times' / >\n          <\n          /button>\n        )\n      } <\n      /div> <\n      /div> <\n      /Fragment>\n    );\n\n    PostItem.propTypes = {\n      post: PropTypes.object.isRequired,\n      auth: PropTypes.object.isRequired,\n      addLike: PropTypes.func.isRequired,\n      removeLike: PropTypes.func.isRequired,\n      deletePost: PropTypes.func.isRequired\n    };\n\n    const mapStateToProps = state => ({\n      auth: state.auth\n    });\n\n    export default connect(\n      mapStateToProps, {\n        addLike,\n        removeLike,\n        deletePost\n      }\n    )(PostItem);"]},"metadata":{},"sourceType":"module"}