{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Suhat\\\\OneDrive\\\\Documents\\\\GitHub\\\\teletale\\\\client\\\\src\\\\components\\\\posts\\\\PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n  auth,\n  addLike,\n  removeLike,\n  deletePost,\n  post: {\n    _id,\n    story,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  }\n}) => React.createElement(\"div\", {\n  className: \"post bg-white p-1 my-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: \"/profile/\".concat(user),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  className: \"round-img\",\n  src: avatar,\n  alt: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}), React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, name))), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  className: \"my-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, story), React.createElement(\"p\", {\n  className: \"post-date\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"Posted on \", React.createElement(Moment, {\n  format: \"YYYY/MM/DD\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, date)), React.createElement(\"button\", {\n  onClick: () => addLike(_id),\n  type: \"button\",\n  className: \"btn btn-light\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-thumbs-up\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}), ' ', React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, likes.length > 0 && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, likes.length))), React.createElement(\"button\", {\n  onClick: () => removeLike(_id),\n  type: \"button\",\n  className: \"btn btn-light\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-thumbs-down\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n})), React.createElement(Link, {\n  to: \"/posts/\".concat(_id),\n  className: \"btn btn-primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, \"Add Paragraph\", ' ', comments.length > 0 && React.createElement(\"span\", {\n  className: \"comment-count\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, comments.length)), !auth.loading && user === auth.user._id && React.createElement(\"button\", {\n  onClick: () => deletePost(_id),\n  type: \"button\",\n  className: \"btn btn-danger\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-times\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}))));\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["C:\\Users\\Suhat\\OneDrive\\Documents\\GitHub\\teletale\\client\\src\\components\\posts\\PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","addLike","removeLike","deletePost","PostItem","auth","post","_id","story","name","avatar","user","likes","comments","date","length","loading","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n  auth,\n  addLike,\n  removeLike,\n  deletePost,\n\n  post: { _id, story, name, avatar, user, likes, comments, date }\n}) => (\n  <div className='post bg-white p-1 my-1'>\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img className='round-img' src={avatar} alt='' />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p className='my-1'>{story}</p>\n      <p className='post-date'>\n        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n      </p>\n      <button\n        onClick={() => addLike(_id)}\n        type='button'\n        className='btn btn-light'\n      >\n        <i className='fas fa-thumbs-up' />{' '}\n        <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\n      </button>\n      <button\n        onClick={() => removeLike(_id)}\n        type='button'\n        className='btn btn-light'\n      >\n        <i className='fas fa-thumbs-down' />\n      </button>\n      <Link to={`/posts/${_id}`} className='btn btn-primary'>\n        Add Paragraph{' '}\n        {comments.length > 0 && (\n          <span className='comment-count'>{comments.length}</span>\n        )}\n      </Link>\n      {!auth.loading && user === auth.user._id && (\n        <button\n          onClick={() => deletePost(_id)}\n          type='button'\n          className='btn btn-danger'\n        >\n          <i className='fas fa-times' />\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { addLike, removeLike, deletePost }\n)(PostItem);\n"]},"metadata":{},"sourceType":"module"}