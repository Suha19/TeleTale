{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Suhat\\\\OneDrive\\\\Documents\\\\GitHub\\\\teletale\\\\client\\\\src\\\\components\\\\posts\\\\Posts.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getPosts } from '../../actions/post';\n\nconst Posts = ({\n  getPosts,\n  post: {\n    posts,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n  return loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \" Posts \"), \" \", React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), \" Welcome to the community \"), \" \", React.createElement(PostForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"posts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \" \", posts.map(post => React.createElement(PostItem, {\n    key: post._id,\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), \" \"), \" \");\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(Posts);","map":{"version":3,"sources":["C:\\Users\\Suhat\\OneDrive\\Documents\\GitHub\\teletale\\client\\src\\components\\posts\\Posts.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getPosts","Posts","post","posts","loading","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IACIC,QADJ,EAEIC,SAFJ,QAGO,OAHP;AAIA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACIC,OADJ,QAEO,aAFP;AAGA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SACIC,QADJ,QAEO,oBAFP;;AAIA,MAAMC,KAAK,GAAG,CAAC;AACXD,EAAAA,QADW;AAEXE,EAAAA,IAAI,EAAE;AACFC,IAAAA,KADE;AAEFC,IAAAA;AAFE;AAFK,CAAD,KAMR;AACFR,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,QAAQ;AACX,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,SAAOI,OAAO,GAAK,oBACf,OADe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,GAER,oBACF,QADE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEF;AACG,IAAA,SAAS,EAAG,oBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFE,OAGiD;AACjD,IAAA,SAAS,EAAG,MADqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEnD;AACE,IAAA,SAAS,EAAG,aADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFmD,+BAHjD,OAOE,oBACJ,QADI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EASF;AACI,IAAA,SAAS,EAAG,OADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEID,KAAK,CAACE,GAAN,CAAUH,IAAI,IAAM,oBAChB,QADgB;AACP,IAAA,GAAG,EACRA,IAAI,CAACI,GAFO;AAIhB,IAAA,IAAI,EACAJ,IALY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,CAFJ,MATE,MAFN;AA0BH,CArCD;;AAuCAD,KAAK,CAACM,SAAN,GAAkB;AACdP,EAAAA,QAAQ,EAAEH,SAAS,CAACW,IAAV,CAAeC,UADX;AAEdP,EAAAA,IAAI,EAAEL,SAAS,CAACa,MAAV,CAAiBD;AAFT,CAAlB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BV,EAAAA,IAAI,EAAEU,KAAK,CAACV;AADkB,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CAClBa,eADkB,EACD;AACbX,EAAAA;AADa,CADC,CAAP,CAIbC,KAJa,CAAf","sourcesContent":["import React, {\n    Fragment,\n    useEffect\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    connect\n} from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport {\n    getPosts\n} from '../../actions/post';\n\nconst Posts = ({\n    getPosts,\n    post: {\n        posts,\n        loading\n    }\n}) => {\n    useEffect(() => {\n        getPosts();\n    }, [getPosts]);\n\n    return loading ? ( <\n        Spinner / >\n    ) : ( <\n        Fragment >\n        <\n        h1 className = 'large text-primary' > Posts < /h1> <\n        p className = 'lead' >\n        <\n        i className = 'fas fa-user' / > Welcome to the community <\n        /p> <\n        PostForm / >\n        <\n        div className = 'posts' > {\n            posts.map(post => ( <\n                PostItem key = {\n                    post._id\n                }\n                post = {\n                    post\n                }\n                />\n            ))\n        } <\n        /div> <\n        /Fragment>\n    );\n};\n\nPosts.propTypes = {\n    getPosts: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    post: state.post\n});\n\nexport default connect(\n    mapStateToProps, {\n        getPosts\n    }\n)(Posts);"]},"metadata":{},"sourceType":"module"}